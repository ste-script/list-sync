services:
  broker1:
    image: apache/kafka:3.9.0
    container_name: broker1
    depends_on:
      - pgsql
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://broker1:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker1:9092,CONTROLLER://broker1:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker1:9093,2@broker2:9093,3@broker3:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    networks:
      - list-sync-net

  broker2:
    image: apache/kafka:3.9.0
    container_name: broker2
    depends_on:
      - pgsql
    environment:
      KAFKA_NODE_ID: 2
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://broker2:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker2:9092,CONTROLLER://broker2:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker1:9093,2@broker2:9093,3@broker3:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    networks:
      - list-sync-net

  broker3:
    image: apache/kafka:3.9.0
    container_name: broker3
    depends_on:
      - pgsql
    environment:
      KAFKA_NODE_ID: 3
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://broker3:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker3:9092,CONTROLLER://broker3:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker1:9093,2@broker2:9093,3@broker3:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    networks:
      - list-sync-net
  pgsql:
    build:
      context: pgsql
      dockerfile: Dockerfile
    container_name: pgsql
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - list-sync-net
  producer:
    build:
      context: ./python/kafka-project
      dockerfile: Dockerfile
    depends_on:
      - broker1      
    volumes:
      - type: bind
        read_only: false
        source: ./python/kafka-project/src
        target: /app/src
        bind:
          propagation: shared
          selinux: z
    working_dir: /app
    command: "poetry run python src/pgsql_connector.py"
    networks:
      - list-sync-net
  consumer:
    restart: always
    build:
      context: ./python/kafka-project
      dockerfile: Dockerfile
    deploy:
      replicas: 20
    privileged: true
    volumes:
      - type: bind
        read_only: false
        source: ./python/kafka-project/src
        target: /app/src
        bind:
          propagation: shared
          selinux: z
    working_dir: /app
    command: "poetry run python src/consumer.py"
    networks:
      - list-sync-net
  seeder:
    restart: always
    build:
      context: ./python/kafka-project
      dockerfile: Dockerfile
    privileged: true
    volumes:
      - type: bind
        read_only: false
        source: ./python/kafka-project/test
        target: /app/test
        bind:
          propagation: shared
          selinux: z
    working_dir: /app
    command: "sleep infinity"
    networks:
      - list-sync-net

volumes:
  pgdata:

networks:
  list-sync-net:
    driver: bridge
