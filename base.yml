services:
  broker1:
    build:
      context: kafka
      dockerfile: Dockerfile
    container_name: broker1
    privileged: true
    ports:
      - "9092:9092"
    depends_on:
      - db
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://broker1:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker1:9092,CONTROLLER://broker1:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker1:9093,2@broker2:9093,3@broker3:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    networks:
      - list-sync-net

  broker2:
    build:
      context: kafka
      dockerfile: Dockerfile
    container_name: broker2
    privileged: true
    ports:
      - "9094:9094"
    depends_on:
      - db
    environment:
      KAFKA_NODE_ID: 2
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9094,CONTROLLER://broker2:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker2:9094,CONTROLLER://broker2:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker1:9093,2@broker2:9093,3@broker3:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    networks:
      - list-sync-net

  broker3:
    build:
      context: kafka
      dockerfile: Dockerfile
    container_name: broker3
    privileged: true
    ports:
      - "9095:9095"
    depends_on:
      - db
    environment:
      KAFKA_NODE_ID: 3
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9095,CONTROLLER://broker3:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker3:9095,CONTROLLER://broker3:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker1:9093,2@broker2:9093,3@broker3:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    networks:
      - list-sync-net
  consumer:
    restart: always
    build:
      context: ./python
      dockerfile: Dockerfile
    deploy:
      replicas: 3
    privileged: true
    volumes:
      - type: bind
        read_only: false
        source: ./python/pystream
        target: /app/pystream
        bind:
          propagation: shared
          selinux: z
      - type: bind
        read_only: false
        source: ./python/test/data
        target: /app/test/data
        bind:
          propagation: shared
          selinux: z
    working_dir: /app
    command: "poetry run python pystream/consumer/__init__.py simulate"
    networks:
      - list-sync-net

volumes:
  pgdata:

networks:
  list-sync-net:
    driver: bridge
